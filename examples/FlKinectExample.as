package {	import flash.display.Sprite;	import flash.display.Bitmap;	import flash.events.Event;	import flash.events.IOErrorEvent;	import jp.kimulabo.flkinect.FlKinect;	import com.bit101.components.*;		public class FlKinectExample extends Sprite {				private var _kinect:FlKinect;		private var _camera:Bitmap;		private var _depth:Bitmap;				private var _tiltSlider:HSlider;		private var _nearThresholdSlider:HSlider;		private var _farThresholdSlider:HSlider;		private var _ledSelector:ComboBox;		private var _cameraButton:PushButton;		private var _depthButton:PushButton;				private var _tiltLabel:Label;		private var _nearThresholdLabel:Label;		private var _farThresholdLabel:Label;				//wait 10 frames after changing settings to prevend the ui from blinking;		private var _waitCount:uint = 0;		private var _frameToWait:uint = 10;				/*--------------------------------------------------		* FlKinect Example		--------------------------------------------------*/		public function FlKinectExample() {						//Stage setting			stage.align = "LT";			stage.scaleMode = "noScale";						//Create FlKinect instance and connect			_kinect = new FlKinect();			_kinect.addEventListener( Event.CONNECT, _connect );			_kinect.addEventListener( IOErrorEvent.IO_ERROR, _error );			_kinect.addEventListener( Event.CHANGE, _change );			_kinect.connect();						//Create Bitmap instance and add to stage			_camera = new Bitmap(_kinect.camera);			_depth = new Bitmap(_kinect.depth);						_camera.width = 320;			_camera.height = 240;			_depth.width = 320;			_depth.height = 240;			_depth.x = _camera.width;						addChild( _camera );			addChild( _depth );						//Create user interface			_tiltSlider = new HSlider(this, 20, 260, _tilt );			_tiltSlider.width = 80;			_tiltSlider.height = 20;			_tiltSlider.minimum = -30;			_tiltSlider.maximum = 30;			_tiltSlider.tick = 1;						_farThresholdSlider = new HSlider(this, 120, 260, _farThreshold );			_farThresholdSlider.width = 80;			_farThresholdSlider.height = 20;			_farThresholdSlider.minimum = 0;			_farThresholdSlider.maximum = 1;			_farThresholdSlider.tick = 1/2048;						_nearThresholdSlider = new HSlider(this, 220, 260, _nearThreshold );			_nearThresholdSlider.width = 80;			_nearThresholdSlider.height = 20;			_nearThresholdSlider.minimum = 0;			_nearThresholdSlider.maximum = 1;			_nearThresholdSlider.tick = 1/2048;			_nearThresholdSlider.value = 1;						_ledSelector = new ComboBox(this, 320, 260, "LED", ["OFF","GREEN","RED","YELLOW","BLINK YELLOW","BLINK GREEN","BLINK RED/YELLOW"] );			_ledSelector.addEventListener( Event.SELECT, _led );						_cameraButton = new PushButton(this, 440, 260, "CAMERA",_cameraEnabled );			_cameraButton.toggle = true;			_cameraButton.selected = true;			_cameraButton.width = 60;						_depthButton = new PushButton(this, 520, 260, "DEPTH",_depthEnabled );			_depthButton.toggle = true;			_depthButton.selected = true;			_depthButton.width = 60;						//			_tiltLabel = new Label( this, 20, 280, "TILT" );			_tiltLabel.width = 80;			_tiltLabel.height = 20;						_farThresholdLabel = new Label( this, 120, 280, "FAR THRESHOLD" );			_farThresholdLabel.width = 80;			_farThresholdLabel.height = 20;						_nearThresholdLabel = new Label( this, 220, 280, "NEAR THRESHOLD" );			_nearThresholdLabel.width = 80;			_nearThresholdLabel.height = 20;					}				/*--------------------------------------------------		* on UI Change		--------------------------------------------------*/		private function _tilt( i_event:Event ):void {			_kinect.tilt = _tiltSlider.value;			_waitCount = _frameToWait;		}				private function _farThreshold( i_event:Event ):void {			_kinect.farThreshold = _farThresholdSlider.value;			_waitCount = _frameToWait;		}				private function _nearThreshold( i_event:Event ):void {			_kinect.nearThreshold = _nearThresholdSlider.value;			_waitCount = _frameToWait;		}				private function _led( i_event:Event ):void {			_kinect.led = _ledSelector.selectedIndex;			_waitCount = _frameToWait;		}				private function _cameraEnabled( i_event:Event ):void {			_kinect.cameraEnabled = _cameraButton.selected;			_waitCount = _frameToWait;		}				private function _depthEnabled( i_event:Event ):void {			_kinect.depthEnabled = _depthButton.selected;			_waitCount = _frameToWait;		}				/*--------------------------------------------------		* flKinect Events		--------------------------------------------------*/		private function _connect( i_event:Event ):void {			trace("Connected");		}				private function _error( i_event:IOErrorEvent ):void {			trace("Socket Error");		}				private function _change( i_event:Event ):void {						//wait 10 frames after changing settings to prevend the ui from blinking;			if ( _waitCount > 0 ) {				_waitCount--;				return;			}			if ( _tiltSlider.value != _kinect.tilt ) _tiltSlider.value = _kinect.tilt;			if ( _farThresholdSlider.value != _kinect.farThreshold ) _farThresholdSlider.value = _kinect.farThreshold;			if ( _nearThresholdSlider.value != _kinect.nearThreshold ) _nearThresholdSlider.value = _kinect.nearThreshold;			if ( _ledSelector.selectedIndex != _kinect.led ) _ledSelector.selectedIndex = _kinect.led;			if ( _cameraButton.selected != ( _kinect.cameraEnabled > 0 ) as Boolean ) _cameraButton.selected = ( _kinect.cameraEnabled > 0 ) as Boolean;			if ( _depthButton.selected != ( _kinect.depthEnabled > 0 ) as Boolean ) _depthButton.selected = ( _kinect.depthEnabled > 0 ) as Boolean;		}				}}